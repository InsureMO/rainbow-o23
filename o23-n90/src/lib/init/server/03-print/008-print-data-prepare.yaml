code: PrintDataPrepare
name: Prepare Print Data
type: step-sets
use: sets

# consume: print template object
# produce: prepared data

steps:
  - name: Prepare Trigger Type
    use: routes
    from-input: $factor.template.dataPipeline
    routes:
      - check: $factor == null
        steps:
          - name: No Data Pipeline
            use: snippet
            snippet: "{pipeline: false}"
            merge: trigger
      - check: $factor.code != null && $factor.code.trim().length !== 0
        steps:
          - name: Prepare Code Trigger
            use: snippet
            snippet: "{pipeline: true, code: $factor.template.dataPipeline.code}"
            merge: trigger
      - check: $factor.content != null && $factor.content.trim().length !== 0
        steps:
          - name: Prepare Content Trigger
            use: snippet
            snippet: "{pipeline: true, content: $factor.template.dataPipeline.content}"
            merge: trigger
    otherwise:
      - name: Trigger Not Supported
        use: snippet
        snippet: |-
          $.$error({status: 500, code: 'O99-10121', reason: `Data pipeline of print template[code=${$factor.template.templateCode}] not supported.`});
  - name: Merge Data Into Trigger
    use: conditional
    check: $factor.trigger.pipeline === true
    steps:
      - name: Prepare Trigger Data
        use: snippet
        snippet: |-
          return {...$factor.trigger, data: $factor.data, cacheKey: `print-template-${$factor.template.templateId}`};
        merge: trigger
      - name: Call Prepare Data Pipeline
        use: trigger-pipeline
        from-input: $factor.trigger
        merge: preparedData
    otherwise:
      - name: Use Given Data
        use: snippet
        snippet: "$factor.data"
        merge: preparedData
